//import { Inter } from "next/font/google";
import Client from "@/components/Client";
import Feature from "@/components/Feature";
import HeroSection from "@/components/HeroSection";
import Container from "@/components/Container";
import Navbar from "@/components/Navbar";
import { useNavitems } from "@/hooks/useNavitems";
import { useFeatures } from "@/hooks/useFeatures";
import { useHeroSection } from "@/hooks/useHeroSection";
import { useTestimonials } from "@/hooks/useTestimonials";
import Tesimonials from "@/components/Tesimonials";
import Faq from "@/components/Faq";
import Footer from "@/components/Footer";
import Steps from "@/components/Steps";
import CallToAction from "@/components/CallToAction";
import Head from 'next/head';
import { Roboto } from "next/font/google";
import Providers from "@/components/Providers";
import {Globe} from "@/components/ui/globe";
import dynamic from 'next/dynamic';
//import { data } from '@/data/globe.json'; 
import NewsletterForm from '../components/NewsletterForm';


//const inter = Inter({ subsets: ["latin"] });

const roboto = Roboto({
  subsets: ['latin'],
  weight: ['400', '700'],
})

export const revalidate = 60;

/* // Dynamically import the Globe component to avoid SSR issues
const Globe = dynamic(() => import('../components/ui/globe'), { ssr: false }); */

export default function Home() {
  const features = useFeatures();
  const heroSection = useHeroSection();
  const testimonials = useTestimonials();

  return (
    <Client>
      <main
        className={`surpresshydration flex min-h-screen flex-col items-center justify-between ${roboto.className}`}
      >

        <Head>
          <title>Fleet Blog</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="favicon.ico" />
        </Head>
        <Providers>
        <Navbar />
        <Container>
          {/* Render hero section if available */}
          {heroSection && <HeroSection heroSection={heroSection[0]} />}
          {/* Render 3 steps */}
          <Steps />
          {/* Render features */}
          {features?.map((feature) => (
            <Feature key={feature._id} feature={feature} />
          ))}
          {/* Render call to action */}
          <CallToAction />
          {/* Render Faq Section */}
          <Faq />
          {/* Render testimonials section */}
          <Tesimonials testimonials={testimonials} />

           {/* <Globe />   */}
          
           <NewsletterForm />
          
          <Footer />
        </Container>
        </Providers>
      </main>
    </Client>
  );
}
